name: Build and Push to ECR frontend
on:
  push:
    paths:
      - 'frontend/**'
      - 'k8s-yaml/frontend/**'
      - '.github/workflows/build-deploy.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-push-react-app:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::495599733393:role/OIDC
          role-session-name: github-assume
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get ECR registry URI
        id: get-registry
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
          echo "REGISTRY=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_ENV

      - name: Build React Docker Image
        run: |
          docker build -t $REGISTRY/react-app:${{ github.sha }} ./frontend
          docker tag $REGISTRY/react-app:${{ github.sha }} $REGISTRY/react-app:latest

      - name: Push React Docker Image
        run: |
          docker push $REGISTRY/react-app:${{ github.sha }}
          docker push $REGISTRY/react-app:latest

  deploy:
    name: Deploy App and ALB Ingress
    needs: build-push-react-app
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: test-eks
      AWS_REGION: ap-south-1
      NAMESPACE: default

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::495599733393:role/OIDC
          role-session-name: github-assume
          aws-region: ap-south-1

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name eks-fargate-eks

      - name: Verify Cluster Access
        run: |
          kubectl get nodes
      # - name: Add IAM user 'prakash' to aws-auth configmap
      #   run: |
      #     kubectl patch configmap aws-auth -n kube-system --type merge -p '
      #     {
      #       "data": {
      #         "mapUsers": "- userarn: arn:aws:iam::495599733393:user/prakash\n  username: prakash\n  groups:\n    - system:masters"
      #       }
      #     }'



      - name: Deployment + Service + Ingress
        run: |
         kubectl apply -f k8s-yaml/frontend/deployment/frontend-deployment.yaml
         kubectl apply -f k8s-yaml/frontend/deployment/ingress-frontend.yaml



  